
#requires having   labels: co.elastic.logs/enabled: "true"  set for a container

version: '3.x'
volumes:
  elasticsearch_data:
  elasticsearch_certs:
services:
  setup:
    image: 'elastic/elasticsearch:8.5.1'
    volumes:
      - elasticsearch_certs:/usr/share/elasticsearch/config/certs
    user: "0"
    environment:
      ELASTIC_PASSWORD: "elastic"
      KIBANA_PASSWORD: "kibana"
    command: >
      bash -c '
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: esnode1\n"\
          "    dns:\n"\
          "      - esnode1\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://esnode1:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD}" -H "Content-Type: application/json" https://esnode1:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "Good to go!";
      '

  esnode1:
    depends_on:
      - setup
    image: 'elastic/elasticsearch:8.5.1'
    container_name: esnode1
    restart: unless-stopped
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - elasticsearch_certs:/usr/share/elasticsearch/config/certs
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
      ELASTIC_PASSWORD: "elastic" #=_dABDaAPeL*nThvE=0T
      KIBANA_PASSWORD: "kibana"
      discovery.type: single-node

      node.name: esnode1
      bootstrap.memory_lock: true
      xpack.security.enabled: true
      xpack.security.http.ssl.enabled: true
      xpack.security.http.ssl.key: certs/esnode1/esnode1.key
      xpack.security.http.ssl.certificate: certs/esnode1/esnode1.crt
      xpack.security.http.ssl.certificate_authorities: certs/ca/ca.crt
      xpack.security.http.ssl.verification_mode: certificate
      xpack.security.transport.ssl.enabled: true
      xpack.security.transport.ssl.key: certs/esnode1/esnode1.key
      xpack.security.transport.ssl.certificate: certs/esnode1/esnode1.crt
      xpack.security.transport.ssl.certificate_authorities: certs/ca/ca.crt
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.license.self_generated.type: basic
    ports:
      - "9200:9200"
      - "9300:9300"
    labels:
      co.elastic.logs/enabled: "false"

  filebeat:
    depends_on:
      - esnode1
    image: 'storoom_filebeat'
    build:
      context: .
    container_name: filebeat
    restart: unless-stopped
    user: root
    volumes:
      - elasticsearch_certs:/usr/share/filebeat/certs
#      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      ELASTICSEARCH_HOSTS: https://esnode1:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}

    labels:
      co.elastic.logs/enabled: "false"

  kibana:
    depends_on:
      - esnode1
      - filebeat
    image: 'elastic/kibana:8.5.1'
    container_name: kibana
    restart: unless-stopped
    volumes:
      - elasticsearch_certs:/usr/share/kibana/config/certs
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    environment:
      ELASTICSEARCH_HOSTS: https://esnode1:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: ${KIBANA_PASSWORD}
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: config/certs/ca/ca.crt
    ports:
      - "5601:5601"
    labels:
      co.elastic.logs/enabled: "false"