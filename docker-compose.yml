version: '3.x'
services:
  redoc:
    image: 'storoom_redoc:latest'
    build:
      context: docs
    container_name: redoc
    ports:
      - "8998:80"

  eureka-service:
    image: 'storoom_eureka:latest'
    build:
      context: eureka
    container_name: eureka-service
    ports:
      - "8761:8761"
    environment:
      SERVER_PORT: 8761

  gateway:
    image: 'storoom_gateway:latest'
    build:
      context: gateway
    container_name: gateway
    depends_on:
      - eureka-service
    ports:
      - "8080:8080"
    environment:
      server.port: 8080
      eureka.client.service-url.defaultZone: http://eureka-service:8761/eureka

  config:
    image: 'storoom_config:latest'
    build:
      context: config
    container_name: config
    depends_on:
      - eureka-service
    ports:
      - "8888:8888"
    environment:
      server.port: 8888
      spring.profiles.active: native
      spring.cloud.config.server.native.searchLocations: file:/config-repo
      eureka.client.service-url.defaultZone: http://eureka-service:8761/eureka
    volumes:
      - ./config-repo:/config-repo


  token:
    image: 'storoom_token:latest'
    build:
      context: token
    container_name: token
    depends_on:
      - eureka-service
      - config
      - users
    ports:
      - "8081:8081"
    environment:
      SERVER_PORT: 8081
      eureka.client.service-url.defaultZone: http://eureka-service:8761/eureka
      spring.config.import: configserver:http://config:8888
    command: sh wait-for.sh config:8888 -- java -jar application.jar
#      admin.username: admin
#      admin.password: admin
#      app.security.jwt.secret: s/4KMb61LOrMYYAn4rfaQYSgr+le5SMrsMzKw8G6bXc=


  users:
    image: 'storoom_users:latest'
    build:
      context: users
    container_name: users
    depends_on:
      - eureka-service
      - config
      - users_db
    ports:
      - "8082:8082"
    environment:
      SERVER_PORT: 8082
      eureka.client.service-url.defaultZone: http://eureka-service:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:postgresql://users_db:5432/users_db
      spring.config.import: configserver:http://config:8888
    command: sh wait-for.sh config:8888 -- java -jar application.jar
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: postgres
#      SPRING_JPA_HIBERNATE_DDL_AUTO: none
#      admin.username: admin
#      app.security.jwt.secret: s/4KMb61LOrMYYAn4rfaQYSgr+le5SMrsMzKw8G6bXc=

  locks:
    image: 'storoom_locks:latest'
    build:
      context: locks
    container_name: locks
    depends_on:
      - eureka-service
      - config
      - locks_db
    ports:
      - "8083:8083"
    environment:
      SERVER_PORT: 8083
      eureka.client.service-url.defaultZone: http://eureka-service:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:postgresql://locks_db:5432/locks_db
      spring.config.import: configserver:http://config:8888
    command: sh wait-for.sh config:8888 -- java -jar application.jar

  orders:
    image: 'storoom_orders:latest'
    build:
      context: orders
    container_name: orders
    depends_on:
      - eureka-service
      - config
      - orders_db
    ports:
      - "8084:8084"
    environment:
      SERVER_PORT: 8084
      eureka.client.service-url.defaultZone: http://eureka-service:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:postgresql://orders_db:5432/orders_db
      spring.config.import: configserver:http://config:8888
    command: sh wait-for.sh config:8888 -- java -jar application.jar


  users_db:
    image: 'postgres:14.5-alpine'
    container_name: users_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users_db

  locks_db:
    image: 'postgres:14.5-alpine'
    container_name: locks_db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: locks_db

  orders_db:
    image: 'postgres:14.5-alpine'
    container_name: orders_db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: orders_db

  locations_db:
    image: 'postgres:14.5-alpine'
    container_name: locations_db
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: locations_db